{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","Preloader","Post","item","message","numlike","maxLength10","maxLengthCreator","MyPosts","memo","postsElement","posts","map","p","likesCount","createRef","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","autorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.574d0013.chunk.js","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Redirect} from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state) => ({  \n    isAuth: state.auth.isAuth\n  });\n\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {                       \n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\n            \n            return <Component {...this.props} />              \n        }\n    }\n\n    \n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n} ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1uxDy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__1rLNM\",\"postsBlock\":\"MyPosts_postsBlock__2B2Fm\",\"posts\":\"MyPosts_posts__8z5Jf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ZrVW0\"};","import React, {useState, useEffect} from 'react';\nimport s from './ProfileInfo.module.css'\n\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status] );\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);        \n    }\n\n    \n\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode}>{props.status || \"------\"}</span>\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input autoFocus={true}\n                           onBlur={deactivateEditMode}\n                           onChange={onStatusChange}\n                           value={status} />\n                </div>\n            }\n        </div>\n\n    )\n\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from './ProfileInfo.module.css'\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n  if (!profile) {\n    return <Preloader />\n  }\n  return (\n    <div>\n      <div className={s.descriptionBlock} >\n        <img src={profile.photos.large} />\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n      <div className={s.item}>\r\n        <img src='https://cs7.pikabu.ru/post_img/big/2018/10/20/9/154004999513599819.jpg'></img>\r\n        {props.message}\r\n        <div>\r\n        <span>like {props.numlike} </span>\r\n        </div>\r\n      </div>\r\n      )\r\n}\r\n\r\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css'\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form'\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/Preloader/FormsControls/FormsControls';\n\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPosts = React.memo((props) => {\n\nlet postsElement = props.posts\n  .map(p => <Post message={p.message} numlike={p.likesCount} />);\n\n  let newPostElement = React.createRef();\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);     \n   }\n\n\n  return (\n    <div className={s.postsBlock}>\n      <h3>My posts</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost} /> \n      <div className={s.posts}>\n        {postsElement}\n      </div>        \n    </div>\n  )\n});\n\nconst AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n          <Field name=\"newPostText\" \n                  component={Textarea} \n                  placeholder=\"Enter your post\" \n                  validate={[required, maxLength10]} />\n        </div>\n        <div>\n          <button>Add post</button>\n        </div>\n    </form>\n  )\n}\n\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\n\n\n\nexport default MyPosts;","import React from 'react';\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\n\n\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n\n  return (\n  <div>\n    <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />        \n    <MyPostsContainer   />\n  </div>\n  )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport {getUserProfile, getStatus, updateStatus} from '../../redux/profile-reducer';\nimport {Redirect, withRouter} from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    \n    if (!userId) {\n      userId=this.props.autorizedUserId;\n      if (!userId) {\n        this.props.history.push('/login');\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);    \n  }\n  \n  render() {\n    \n    return (\n      <div>\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\n      </div>\n    )\n  }\n}\n\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  autorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth  \n});\n\n\nexport default compose (\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n  withRouter\n) (ProfileContainer)"],"sourceRoot":""}